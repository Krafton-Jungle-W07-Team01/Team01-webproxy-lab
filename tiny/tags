!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Accept	csapp.c	/^int Accept(int s, struct sockaddr *addr, socklen_t *addrlen) $/;"	f
Accept	netp/csapp.c	/^int Accept(int s, struct sockaddr *addr, socklen_t *addrlen) $/;"	f
Alarm	csapp.c	/^unsigned int Alarm(unsigned int seconds) {$/;"	f
Alarm	netp/csapp.c	/^unsigned int Alarm(unsigned int seconds) {$/;"	f
Bind	csapp.c	/^void Bind(int sockfd, struct sockaddr *my_addr, int addrlen) $/;"	f
Bind	netp/csapp.c	/^void Bind(int sockfd, struct sockaddr *my_addr, int addrlen) $/;"	f
CC	Makefile	/^CC = gcc$/;"	m
CC	cgi-bin/Makefile	/^CC = gcc$/;"	m
CC	netp/Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -O2 -Wall -I .$/;"	m
CFLAGS	cgi-bin/Makefile	/^CFLAGS = -O2 -Wall -I ..$/;"	m
CFLAGS	netp/Makefile	/^CFLAGS = -g -Wall$/;"	m
Calloc	csapp.c	/^void *Calloc(size_t nmemb, size_t size) $/;"	f
Calloc	netp/csapp.c	/^void *Calloc(size_t nmemb, size_t size) $/;"	f
Close	csapp.c	/^void Close(int fd) $/;"	f
Close	netp/csapp.c	/^void Close(int fd) $/;"	f
Closedir	csapp.c	/^int Closedir(DIR *dirp) $/;"	f
Closedir	netp/csapp.c	/^int Closedir(DIR *dirp) $/;"	f
Connect	csapp.c	/^void Connect(int sockfd, struct sockaddr *serv_addr, int addrlen) $/;"	f
Connect	netp/csapp.c	/^void Connect(int sockfd, struct sockaddr *serv_addr, int addrlen) $/;"	f
DEF_MODE	csapp.h	34;"	d
DEF_MODE	netp/csapp.h	34;"	d
DEF_UMASK	csapp.h	35;"	d
DEF_UMASK	netp/csapp.h	35;"	d
Dup2	csapp.c	/^int Dup2(int fd1, int fd2) $/;"	f
Dup2	netp/csapp.c	/^int Dup2(int fd1, int fd2) $/;"	f
Execve	csapp.c	/^void Execve(const char *filename, char *const argv[], char *const envp[]) $/;"	f
Execve	netp/csapp.c	/^void Execve(const char *filename, char *const argv[], char *const envp[]) $/;"	f
Fclose	csapp.c	/^void Fclose(FILE *fp) $/;"	f
Fclose	netp/csapp.c	/^void Fclose(FILE *fp) $/;"	f
Fdopen	csapp.c	/^FILE *Fdopen(int fd, const char *type) $/;"	f
Fdopen	netp/csapp.c	/^FILE *Fdopen(int fd, const char *type) $/;"	f
Fgets	csapp.c	/^char *Fgets(char *ptr, int n, FILE *stream) $/;"	f
Fgets	netp/csapp.c	/^char *Fgets(char *ptr, int n, FILE *stream) $/;"	f
Fopen	csapp.c	/^FILE *Fopen(const char *filename, const char *mode) $/;"	f
Fopen	netp/csapp.c	/^FILE *Fopen(const char *filename, const char *mode) $/;"	f
Fork	csapp.c	/^pid_t Fork(void) $/;"	f
Fork	netp/csapp.c	/^pid_t Fork(void) $/;"	f
Fputs	csapp.c	/^void Fputs(const char *ptr, FILE *stream) $/;"	f
Fputs	netp/csapp.c	/^void Fputs(const char *ptr, FILE *stream) $/;"	f
Fread	csapp.c	/^size_t Fread(void *ptr, size_t size, size_t nmemb, FILE *stream) $/;"	f
Fread	netp/csapp.c	/^size_t Fread(void *ptr, size_t size, size_t nmemb, FILE *stream) $/;"	f
Free	csapp.c	/^void Free(void *ptr) $/;"	f
Free	netp/csapp.c	/^void Free(void *ptr) $/;"	f
Freeaddrinfo	csapp.c	/^void Freeaddrinfo(struct addrinfo *res)$/;"	f
Freeaddrinfo	netp/csapp.c	/^void Freeaddrinfo(struct addrinfo *res)$/;"	f
Fstat	csapp.c	/^void Fstat(int fd, struct stat *buf) $/;"	f
Fstat	netp/csapp.c	/^void Fstat(int fd, struct stat *buf) $/;"	f
Fwrite	csapp.c	/^void Fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream) $/;"	f
Fwrite	netp/csapp.c	/^void Fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream) $/;"	f
Getaddrinfo	csapp.c	/^void Getaddrinfo(const char *node, const char *service, $/;"	f
Getaddrinfo	netp/csapp.c	/^void Getaddrinfo(const char *node, const char *service, $/;"	f
Gethostbyaddr	csapp.c	/^struct hostent *Gethostbyaddr(const char *addr, int len, int type) $/;"	f
Gethostbyaddr	netp/csapp.c	/^struct hostent *Gethostbyaddr(const char *addr, int len, int type) $/;"	f
Gethostbyname	csapp.c	/^struct hostent *Gethostbyname(const char *name) $/;"	f
Gethostbyname	netp/csapp.c	/^struct hostent *Gethostbyname(const char *name) $/;"	f
Getnameinfo	csapp.c	/^void Getnameinfo(const struct sockaddr *sa, socklen_t salen, char *host, $/;"	f
Getnameinfo	netp/csapp.c	/^void Getnameinfo(const struct sockaddr *sa, socklen_t salen, char *host, $/;"	f
Getpgrp	csapp.c	/^pid_t Getpgrp(void) {$/;"	f
Getpgrp	netp/csapp.c	/^pid_t Getpgrp(void) {$/;"	f
Inet_ntop	csapp.c	/^void Inet_ntop(int af, const void *src, char *dst, socklen_t size)$/;"	f
Inet_ntop	netp/csapp.c	/^void Inet_ntop(int af, const void *src, char *dst, socklen_t size)$/;"	f
Inet_pton	csapp.c	/^void Inet_pton(int af, const char *src, void *dst) $/;"	f
Inet_pton	netp/csapp.c	/^void Inet_pton(int af, const char *src, void *dst) $/;"	f
Kill	csapp.c	/^void Kill(pid_t pid, int signum) $/;"	f
Kill	netp/csapp.c	/^void Kill(pid_t pid, int signum) $/;"	f
LDFLAGS	netp/Makefile	/^LDFLAGS = -lpthread$/;"	m
LIB	Makefile	/^LIB = -lpthread$/;"	m
LISTENQ	csapp.h	61;"	d
LISTENQ	netp/csapp.h	61;"	d
Listen	csapp.c	/^void Listen(int s, int backlog) $/;"	f
Listen	netp/csapp.c	/^void Listen(int s, int backlog) $/;"	f
Lseek	csapp.c	/^off_t Lseek(int fildes, off_t offset, int whence) $/;"	f
Lseek	netp/csapp.c	/^off_t Lseek(int fildes, off_t offset, int whence) $/;"	f
MAXBUF	csapp.h	60;"	d
MAXBUF	netp/csapp.h	60;"	d
MAXLINE	csapp.h	59;"	d
MAXLINE	netp/csapp.h	59;"	d
Malloc	csapp.c	/^void *Malloc(size_t size) $/;"	f
Malloc	netp/csapp.c	/^void *Malloc(size_t size) $/;"	f
Mmap	csapp.c	/^void *Mmap(void *addr, size_t len, int prot, int flags, int fd, off_t offset) $/;"	f
Mmap	netp/csapp.c	/^void *Mmap(void *addr, size_t len, int prot, int flags, int fd, off_t offset) $/;"	f
Munmap	csapp.c	/^void Munmap(void *start, size_t length) $/;"	f
Munmap	netp/csapp.c	/^void Munmap(void *start, size_t length) $/;"	f
OBJS	netp/Makefile	/^OBJS = $(SRCS:%.c=%.o)$/;"	m
Open	csapp.c	/^int Open(const char *pathname, int flags, mode_t mode) $/;"	f
Open	netp/csapp.c	/^int Open(const char *pathname, int flags, mode_t mode) $/;"	f
Open_clientfd	csapp.c	/^int Open_clientfd(char *hostname, char *port) $/;"	f
Open_clientfd	netp/csapp.c	/^int Open_clientfd(char *hostname, char *port) $/;"	f
Open_listenfd	csapp.c	/^int Open_listenfd(char *port) $/;"	f
Open_listenfd	netp/csapp.c	/^int Open_listenfd(char *port) $/;"	f
Opendir	csapp.c	/^DIR *Opendir(const char *name) $/;"	f
Opendir	netp/csapp.c	/^DIR *Opendir(const char *name) $/;"	f
P	csapp.c	/^void P(sem_t *sem) $/;"	f
P	netp/csapp.c	/^void P(sem_t *sem) $/;"	f
Pause	csapp.c	/^void Pause() $/;"	f
Pause	netp/csapp.c	/^void Pause() $/;"	f
Pthread_cancel	csapp.c	/^void Pthread_cancel(pthread_t tid) {$/;"	f
Pthread_cancel	netp/csapp.c	/^void Pthread_cancel(pthread_t tid) {$/;"	f
Pthread_create	csapp.c	/^void Pthread_create(pthread_t *tidp, pthread_attr_t *attrp, $/;"	f
Pthread_create	netp/csapp.c	/^void Pthread_create(pthread_t *tidp, pthread_attr_t *attrp, $/;"	f
Pthread_detach	csapp.c	/^void Pthread_detach(pthread_t tid) {$/;"	f
Pthread_detach	netp/csapp.c	/^void Pthread_detach(pthread_t tid) {$/;"	f
Pthread_exit	csapp.c	/^void Pthread_exit(void *retval) {$/;"	f
Pthread_exit	netp/csapp.c	/^void Pthread_exit(void *retval) {$/;"	f
Pthread_join	csapp.c	/^void Pthread_join(pthread_t tid, void **thread_return) {$/;"	f
Pthread_join	netp/csapp.c	/^void Pthread_join(pthread_t tid, void **thread_return) {$/;"	f
Pthread_once	csapp.c	/^void Pthread_once(pthread_once_t *once_control, void (*init_function)()) {$/;"	f
Pthread_once	netp/csapp.c	/^void Pthread_once(pthread_once_t *once_control, void (*init_function)()) {$/;"	f
Pthread_self	csapp.c	/^pthread_t Pthread_self(void) {$/;"	f
Pthread_self	netp/csapp.c	/^pthread_t Pthread_self(void) {$/;"	f
RIO_BUFSIZE	csapp.h	45;"	d
RIO_BUFSIZE	netp/csapp.h	45;"	d
Read	csapp.c	/^ssize_t Read(int fd, void *buf, size_t count) $/;"	f
Read	netp/csapp.c	/^ssize_t Read(int fd, void *buf, size_t count) $/;"	f
Readdir	csapp.c	/^struct dirent *Readdir(DIR *dirp)$/;"	f
Readdir	netp/csapp.c	/^struct dirent *Readdir(DIR *dirp)$/;"	f
Realloc	csapp.c	/^void *Realloc(void *ptr, size_t size) $/;"	f
Realloc	netp/csapp.c	/^void *Realloc(void *ptr, size_t size) $/;"	f
Rio_readinitb	csapp.c	/^void Rio_readinitb(rio_t *rp, int fd)$/;"	f
Rio_readinitb	netp/csapp.c	/^void Rio_readinitb(rio_t *rp, int fd)$/;"	f
Rio_readlineb	csapp.c	/^ssize_t Rio_readlineb(rio_t *rp, void *usrbuf, size_t maxlen) $/;"	f
Rio_readlineb	netp/csapp.c	/^ssize_t Rio_readlineb(rio_t *rp, void *usrbuf, size_t maxlen) $/;"	f
Rio_readn	csapp.c	/^ssize_t Rio_readn(int fd, void *ptr, size_t nbytes) $/;"	f
Rio_readn	netp/csapp.c	/^ssize_t Rio_readn(int fd, void *ptr, size_t nbytes) $/;"	f
Rio_readnb	csapp.c	/^ssize_t Rio_readnb(rio_t *rp, void *usrbuf, size_t n) $/;"	f
Rio_readnb	netp/csapp.c	/^ssize_t Rio_readnb(rio_t *rp, void *usrbuf, size_t n) $/;"	f
Rio_writen	csapp.c	/^void Rio_writen(int fd, void *usrbuf, size_t n) $/;"	f
Rio_writen	netp/csapp.c	/^void Rio_writen(int fd, void *usrbuf, size_t n) $/;"	f
SA	csapp.h	/^typedef struct sockaddr SA;$/;"	t	typeref:struct:sockaddr
SA	netp/csapp.h	/^typedef struct sockaddr SA;$/;"	t	typeref:struct:sockaddr
SRCS	netp/Makefile	/^SRCS = csapp.c hostinfo.c echoclient.c echoserveri.c$/;"	m
Select	csapp.c	/^int Select(int  n, fd_set *readfds, fd_set *writefds,$/;"	f
Select	netp/csapp.c	/^int Select(int  n, fd_set *readfds, fd_set *writefds,$/;"	f
Sem_init	csapp.c	/^void Sem_init(sem_t *sem, int pshared, unsigned int value) $/;"	f
Sem_init	netp/csapp.c	/^void Sem_init(sem_t *sem, int pshared, unsigned int value) $/;"	f
Setpgid	csapp.c	/^void Setpgid(pid_t pid, pid_t pgid) {$/;"	f
Setpgid	netp/csapp.c	/^void Setpgid(pid_t pid, pid_t pgid) {$/;"	f
Setsockopt	csapp.c	/^void Setsockopt(int s, int level, int optname, const void *optval, int optlen) $/;"	f
Setsockopt	netp/csapp.c	/^void Setsockopt(int s, int level, int optname, const void *optval, int optlen) $/;"	f
Sigaddset	csapp.c	/^void Sigaddset(sigset_t *set, int signum)$/;"	f
Sigaddset	netp/csapp.c	/^void Sigaddset(sigset_t *set, int signum)$/;"	f
Sigdelset	csapp.c	/^void Sigdelset(sigset_t *set, int signum)$/;"	f
Sigdelset	netp/csapp.c	/^void Sigdelset(sigset_t *set, int signum)$/;"	f
Sigemptyset	csapp.c	/^void Sigemptyset(sigset_t *set)$/;"	f
Sigemptyset	netp/csapp.c	/^void Sigemptyset(sigset_t *set)$/;"	f
Sigfillset	csapp.c	/^void Sigfillset(sigset_t *set)$/;"	f
Sigfillset	netp/csapp.c	/^void Sigfillset(sigset_t *set)$/;"	f
Sigismember	csapp.c	/^int Sigismember(const sigset_t *set, int signum)$/;"	f
Sigismember	netp/csapp.c	/^int Sigismember(const sigset_t *set, int signum)$/;"	f
Signal	csapp.c	/^handler_t *Signal(int signum, handler_t *handler) $/;"	f
Signal	netp/csapp.c	/^handler_t *Signal(int signum, handler_t *handler) $/;"	f
Sigprocmask	csapp.c	/^void Sigprocmask(int how, const sigset_t *set, sigset_t *oldset)$/;"	f
Sigprocmask	netp/csapp.c	/^void Sigprocmask(int how, const sigset_t *set, sigset_t *oldset)$/;"	f
Sigsuspend	csapp.c	/^int Sigsuspend(const sigset_t *set)$/;"	f
Sigsuspend	netp/csapp.c	/^int Sigsuspend(const sigset_t *set)$/;"	f
Sio_error	csapp.c	/^void Sio_error(char s[])$/;"	f
Sio_error	netp/csapp.c	/^void Sio_error(char s[])$/;"	f
Sio_putl	csapp.c	/^ssize_t Sio_putl(long v)$/;"	f
Sio_putl	netp/csapp.c	/^ssize_t Sio_putl(long v)$/;"	f
Sio_puts	csapp.c	/^ssize_t Sio_puts(char s[])$/;"	f
Sio_puts	netp/csapp.c	/^ssize_t Sio_puts(char s[])$/;"	f
Sleep	csapp.c	/^unsigned int Sleep(unsigned int secs) $/;"	f
Sleep	netp/csapp.c	/^unsigned int Sleep(unsigned int secs) $/;"	f
Socket	csapp.c	/^int Socket(int domain, int type, int protocol) $/;"	f
Socket	netp/csapp.c	/^int Socket(int domain, int type, int protocol) $/;"	f
Stat	csapp.c	/^void Stat(const char *filename, struct stat *buf) $/;"	f
Stat	netp/csapp.c	/^void Stat(const char *filename, struct stat *buf) $/;"	f
TARGET	netp/Makefile	/^TARGET = hostinfo client server$/;"	m
V	csapp.c	/^void V(sem_t *sem) $/;"	f
V	netp/csapp.c	/^void V(sem_t *sem) $/;"	f
Wait	csapp.c	/^pid_t Wait(int *status) $/;"	f
Wait	netp/csapp.c	/^pid_t Wait(int *status) $/;"	f
Waitpid	csapp.c	/^pid_t Waitpid(pid_t pid, int *iptr, int options) $/;"	f
Waitpid	netp/csapp.c	/^pid_t Waitpid(pid_t pid, int *iptr, int options) $/;"	f
Write	csapp.c	/^ssize_t Write(int fd, const void *buf, size_t count) $/;"	f
Write	netp/csapp.c	/^ssize_t Write(int fd, const void *buf, size_t count) $/;"	f
__CSAPP_H__	csapp.h	6;"	d
__CSAPP_H__	netp/csapp.h	6;"	d
app_error	csapp.c	/^void app_error(char *msg) \/* Application error *\/$/;"	f
app_error	netp/csapp.c	/^void app_error(char *msg) \/* Application error *\/$/;"	f
clienterror	tiny.c	/^void clienterror(int fd, char *cause, char *errnum, char *shortmsg, char *longmsg)$/;"	f
dns_error	csapp.c	/^void dns_error(char *msg) \/* Obsolete gethostbyname error *\/$/;"	f
dns_error	netp/csapp.c	/^void dns_error(char *msg) \/* Obsolete gethostbyname error *\/$/;"	f
doit	tiny.c	/^void doit(int fd)$/;"	f
echo	netp/echoserveri.c	/^void echo(int connfd)$/;"	f
gai_error	csapp.c	/^void gai_error(int code, char *msg) \/* Getaddrinfo-style error *\/$/;"	f
gai_error	netp/csapp.c	/^void gai_error(int code, char *msg) \/* Getaddrinfo-style error *\/$/;"	f
get_filetype	tiny.c	/^void get_filetype(char *filename, char *filetype)$/;"	f
handler_t	csapp.h	/^typedef void handler_t(int);$/;"	t
handler_t	netp/csapp.h	/^typedef void handler_t(int);$/;"	t
main	cgi-bin/adder.c	/^int main(void)$/;"	f
main	netp/echoclient.c	/^int main(int argc, char **argv)$/;"	f
main	netp/echoserveri.c	/^int main(int argc, char **argv)$/;"	f
main	netp/hostinfo.c	/^int main(int argc, char **argv)$/;"	f
main	tiny.c	/^int main(int argc, char **argv) {$/;"	f
open_clientfd	csapp.c	/^int open_clientfd(char *hostname, char *port) {$/;"	f
open_clientfd	netp/csapp.c	/^int open_clientfd(char *hostname, char *port) {$/;"	f
open_listenfd	csapp.c	/^int open_listenfd(char *port) $/;"	f
open_listenfd	netp/csapp.c	/^int open_listenfd(char *port) $/;"	f
parse_uri	tiny.c	/^int parse_uri(char *uri, char *filename, char *cgiargs)$/;"	f
posix_error	csapp.c	/^void posix_error(int code, char *msg) \/* Posix-style error *\/$/;"	f
posix_error	netp/csapp.c	/^void posix_error(int code, char *msg) \/* Posix-style error *\/$/;"	f
read_requesthdrs	tiny.c	/^void read_requesthdrs(rio_t *rp)$/;"	f
rio_buf	csapp.h	/^    char rio_buf[RIO_BUFSIZE]; \/* Internal buffer *\/$/;"	m	struct:__anon2
rio_buf	netp/csapp.h	/^    char rio_buf[RIO_BUFSIZE]; \/* Internal buffer *\/$/;"	m	struct:__anon1
rio_bufptr	csapp.h	/^    char *rio_bufptr;          \/* Next unread byte in internal buf *\/$/;"	m	struct:__anon2
rio_bufptr	netp/csapp.h	/^    char *rio_bufptr;          \/* Next unread byte in internal buf *\/$/;"	m	struct:__anon1
rio_cnt	csapp.h	/^    int rio_cnt;               \/* Unread bytes in internal buf *\/$/;"	m	struct:__anon2
rio_cnt	netp/csapp.h	/^    int rio_cnt;               \/* Unread bytes in internal buf *\/$/;"	m	struct:__anon1
rio_fd	csapp.h	/^    int rio_fd;                \/* Descriptor for this internal buf *\/$/;"	m	struct:__anon2
rio_fd	netp/csapp.h	/^    int rio_fd;                \/* Descriptor for this internal buf *\/$/;"	m	struct:__anon1
rio_read	csapp.c	/^static ssize_t rio_read(rio_t *rp, char *usrbuf, size_t n)$/;"	f	file:
rio_read	netp/csapp.c	/^static ssize_t rio_read(rio_t *rp, char *usrbuf, size_t n)$/;"	f	file:
rio_readinitb	csapp.c	/^void rio_readinitb(rio_t *rp, int fd) $/;"	f
rio_readinitb	netp/csapp.c	/^void rio_readinitb(rio_t *rp, int fd) $/;"	f
rio_readlineb	csapp.c	/^ssize_t rio_readlineb(rio_t *rp, void *usrbuf, size_t maxlen) $/;"	f
rio_readlineb	netp/csapp.c	/^ssize_t rio_readlineb(rio_t *rp, void *usrbuf, size_t maxlen) $/;"	f
rio_readn	csapp.c	/^ssize_t rio_readn(int fd, void *usrbuf, size_t n) $/;"	f
rio_readn	netp/csapp.c	/^ssize_t rio_readn(int fd, void *usrbuf, size_t n) $/;"	f
rio_readnb	csapp.c	/^ssize_t rio_readnb(rio_t *rp, void *usrbuf, size_t n) $/;"	f
rio_readnb	netp/csapp.c	/^ssize_t rio_readnb(rio_t *rp, void *usrbuf, size_t n) $/;"	f
rio_t	csapp.h	/^} rio_t;$/;"	t	typeref:struct:__anon2
rio_t	netp/csapp.h	/^} rio_t;$/;"	t	typeref:struct:__anon1
rio_writen	csapp.c	/^ssize_t rio_writen(int fd, void *usrbuf, size_t n) $/;"	f
rio_writen	netp/csapp.c	/^ssize_t rio_writen(int fd, void *usrbuf, size_t n) $/;"	f
serve_dynamic	tiny.c	/^void serve_dynamic(int fd, char *filename, char *cgiargs)$/;"	f
serve_static	tiny.c	/^void serve_static(int fd, char *filename, int filesize, char *version)$/;"	f
sio_error	csapp.c	/^void sio_error(char s[]) \/* Put error message and exit *\/$/;"	f
sio_error	netp/csapp.c	/^void sio_error(char s[]) \/* Put error message and exit *\/$/;"	f
sio_ltoa	csapp.c	/^static void sio_ltoa(long v, char s[], int b) $/;"	f	file:
sio_ltoa	netp/csapp.c	/^static void sio_ltoa(long v, char s[], int b) $/;"	f	file:
sio_putl	csapp.c	/^ssize_t sio_putl(long v) \/* Put long *\/$/;"	f
sio_putl	netp/csapp.c	/^ssize_t sio_putl(long v) \/* Put long *\/$/;"	f
sio_puts	csapp.c	/^ssize_t sio_puts(char s[]) \/* Put string *\/$/;"	f
sio_puts	netp/csapp.c	/^ssize_t sio_puts(char s[]) \/* Put string *\/$/;"	f
sio_reverse	csapp.c	/^static void sio_reverse(char s[])$/;"	f	file:
sio_reverse	netp/csapp.c	/^static void sio_reverse(char s[])$/;"	f	file:
sio_strlen	csapp.c	/^static size_t sio_strlen(char s[])$/;"	f	file:
sio_strlen	netp/csapp.c	/^static size_t sio_strlen(char s[])$/;"	f	file:
unix_error	csapp.c	/^void unix_error(char *msg) \/* Unix-style error *\/$/;"	f
unix_error	netp/csapp.c	/^void unix_error(char *msg) \/* Unix-style error *\/$/;"	f
